{"version":3,"sources":["./src/app/status-list.service.ts","./src/environments/environment.ts","./src/app/update-list/update-list.component.ts","./src/app/update-list/update-list.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/add/add.component.ts","./src/app/add/add.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/app/update/update.component.html","./src/app/update/update.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core'; \nimport {HttpClient} from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusListService {\nurl = \"http://localhost:3000/status\"\n  constructor(private http:HttpClient) { }\ngetStaus(){\n return this.http.get(this.url);\n}\n\nsaveStatus(data:string)\n{\n// console.log(\"some data\", data)\n     return this.http.post(this.url,data);\n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-update-list',\n  templateUrl: './update-list.component.html',\n  styleUrls: ['./update-list.component.css']\n})\nexport class UpdateListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>update-list works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'GIS Team Status';\n}\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n<!-- <app-staus></app-staus> -->","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport {AddComponent }from './add/add.component';\nimport {UpdateComponent} from './update/update.component';\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { UpdateListComponent } from './update-list/update-list.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent, \n    AddComponent,\n    UpdateComponent,\n    DashboardComponent,\n    UpdateListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    NgbModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {  FormGroup,FormControl } from '@angular/forms';\nimport {StatusListService} from '../status-list.service'\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n  alert:boolean=false\n  addStatus = new FormGroup({\n    name: new FormControl(''),\n  date: new FormControl(''),\n    task: new FormControl(''),\n    achieved: new FormControl(''),\n    remarks: new FormControl('')\n  })\n\n  constructor(private satusList:StatusListService) { }\n\n  ngOnInit(): void {\n  }\n  collectStatus(){\n\n    // console.log(this.addStatus.value)\n     this.satusList.saveStatus(this.addStatus.value).subscribe((result)=>{\n      console.log(\"Resullt is here\", result)\n     })\n    this.alert=true\n    this.addStatus.reset({})\n  }\n  closeAlert(){\n    this.alert=false\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-2\">\n            <!-- One of three columns -->\n        </div>\n        <div class=\"col-sm-8\">\n            <h2 style=\"text-align: center;\">Add Status</h2>\n            <div *ngIf=\"alert\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                <strong>Holy guacamole!</strong> You should check in on some of those fields below.\n                <button (click)=\"closeAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <hr>\n\n            <form [formGroup]=\"addStatus\" (ngSubmit)=\"collectStatus()\">\n                <div class=\"form-group row mt-5 \">\n                    <label for=\"inputPassword \" class=\"col-sm-2 col-form-label \">Name</label>\n                    <div class=\"col-sm-6 \">\n                        <input type=\"text \" class=\"form-control \" id=\"inputPassword \" formControlName=\"name\">\n                    </div>\n                </div>\n                <div class=\"form-group row mt-2 \">\n                    <label for=\"inputPassword \" class=\"col-sm-2 col-form-label \">Date</label>\n                    <div class=\"col-sm-6 \">\n                        <input type=\"Date\" class=\"form-control \" id=\"inputPassword \" formControlName=\"date\">\n                    </div>\n                </div>\n                <div class=\"form-group row mt-2 \">\n                    <label for=\"inputPassword \" class=\"col-sm-2 col-form-label \">Task</label>\n                    <div class=\"col-sm-6 \">\n                        <input type=\"text \" class=\"form-control \" id=\"inputPassword \" formControlName=\"task\">\n                    </div>\n                </div>\n                <div class=\"form-group row mt-2 \">\n                    <label for=\"inputPassword \" class=\"col-sm-2 col-form-label \">Achieved</label>\n                    <div class=\"col-sm-6 \">\n                        <input type=\"text \" class=\"form-control \" id=\"inputPassword \" formControlName=\"achieved\">\n                    </div>\n                </div>\n                <div class=\"form-group row mt-2 \">\n                    <label for=\"inputPassword \" class=\"col-sm-2 col-form-label \">Remarks</label>\n                    <div class=\"col-sm-6 \">\n                        <input type=\"text \" class=\"form-control \" id=\"inputPassword\" formControlName=\"remarks\">\n                    </div>\n                </div>\n                <button type=\"submit \" class=\"btn btn-primary mt-5 \">Submit</button>\n            </form>\n        </div>\n        <div class=\"col-sm-2 \">\n            <!-- One of three columns -->\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"warn\">\r\n    <span font-style=\"italic\">GIS Portal</span>\r\n    <div class=\"spacer\"></div>\r\n    <a routerLink=\"add\" mat-button>Add</a>\r\n    <a routerLink=\"update\" mat-button>List </a>\r\n    <a routerLink=\"app-update-list\" mat-button>Update List</a>\r\n\r\n</mat-toolbar>\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport{AddComponent} from './add/add.component'\nimport {UpdateComponent} from './update/update.component'\nimport {UpdateListComponent} from './update-list/update-list.component'\n\nconst routes: Routes = [\n  {\n      path:'add',\n      component:AddComponent\n  },\n  {\n      path:'update',\n      component:UpdateComponent\n  },\n  {\n    path: 'app-update-list',\n    component: UpdateListComponent\n  }\n \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<table class=\"table\">\n    <thead>\n        <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Task</th>\n            <th scope=\"col\">Achieved</th>\n            <th scope=\"col\">Remarks</th>\n\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let item of collection\">\n            <th>{{item.id}}</th>\n            <th>{{item.name}}</th>\n            <th>{{item.date}}</th>\n            <th>{{item.task}}</th>\n            <th>{{item.achieved}}</th>\n            <th>{{item.remarks}}</th>\n        </tr>\n\n    </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport {StatusListService} from '../status-list.service'\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n\n  constructor( private statusList:StatusListService) { }\ncollection=<any>[];\n  ngOnInit(): void {\n\n    this.statusList.getStaus().subscribe((data)=>{\n// console.log(data)\nthis.collection = data\n    })\n   \n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}